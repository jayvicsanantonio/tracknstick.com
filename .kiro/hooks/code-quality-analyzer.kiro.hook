{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and analyzes modified code for potential improvements including code smells, design patterns, and best practices. Generates suggestions for improving code quality while maintaining existing functionality.",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "src/**/*.ts",
      "src/**/*.tsx",
      "src/**/*.js",
      "src/**/*.jsx",
      "*.ts",
      "*.tsx",
      "*.js",
      "*.jsx"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify any code smells such as long methods, large classes, duplicate code, or complex conditionals\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check adherence to TypeScript/React best practices, proper error handling, and consistent naming conventions\n4. **Readability**: Suggest improvements for code clarity, proper commenting, and logical organization\n5. **Maintainability**: Identify areas that could be refactored for easier maintenance and testing\n6. **Performance**: Suggest optimizations that could improve runtime performance without breaking functionality\n\nFor each suggestion, provide:\n- Clear explanation of the issue or improvement opportunity\n- Specific code examples showing the current approach and recommended changes\n- Reasoning for why the change would be beneficial\n- Any potential risks or considerations\n\nMaintain the existing functionality while focusing on incremental improvements that enhance code quality."
  }
}